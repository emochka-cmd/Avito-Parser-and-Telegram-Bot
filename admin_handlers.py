from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.filters import CommandStart
from database_istance import db
import os


# --- –°–æ–∑–¥–∞–µ–º —Ä–æ—Ç—É–µ—Ä --- 
admin_router = Router()

# --- –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ ---
ADMINS = list(map(int, os.getenv("TgAdmins", "0").split(",")))

# --- –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–æ—É—Ç–µ—Ä —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ ---
admin_router.message.filter(F.chat.id.in_(ADMINS))
admin_router.callback_query.filter(F.from_user.id.in_(ADMINS))


def main_kb() -> InlineKeyboardMarkup:
    inline_main = [
        [InlineKeyboardButton(text="üìú –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏—è—Ö", callback_data='info_five_ads')],
        [InlineKeyboardButton(text="üîé –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ —Ç–µ–º–µ", callback_data='ads_count')],
        [InlineKeyboardButton(text="üîÑ –í–∫–ª—é—á–∏—Ç—å/–í—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-–æ—Ç–ø—Ä–∞–≤–∫—É", callback_data='avto')],
        [InlineKeyboardButton(text="üóëÔ∏è –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ –∏–∑ –±–∞–∑—ã", callback_data='clear_all')],
        [InlineKeyboardButton(text="üîó –ó–∞–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞", callback_data='new_url')],
        [InlineKeyboardButton(text="üìä –°–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π", callback_data='ads_total')],
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_main)


@admin_router.message(CommandStart())
async def admin_start(message: Message):
    await message.answer_sticker('CAACAgIAAxkBAAERTqxombj0GO3zAAFj_8AHu7XfjbmkoeEAAgEBAAJWnb0KIr6fDrjC5jQ2BA')
    await message.answer("üëá –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_kb())




@admin_router.callback_query(F.data == 'ads_total')
async def ads_total(call: CallbackQuery):
    try:
        await call.message.edit_reply_markup(reply_markup=None)
        total = await db.count_ads()  # –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç –±–∞–∑—ã
        await call.message.answer(text=f'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è {total} –æ–±—ä—è–≤–ª–µ–Ω–∏–π.')
    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –ë–î: {e}')