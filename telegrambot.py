import asyncio
import os
from aiogram import Bot, Dispatcher
from admin_handlers import admin_router
from user_handlers import user_router
from aiogram.fsm.storage.redis import RedisStorage
from database_istance import db


class TelegramBot:
    def __init__(self):
        token = os.getenv('TgBot')
        if not token:
            raise ValueError("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω TgBot –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        self.bot = Bot(token=token)


        try:
            self.storage = RedisStorage.from_url("redis://localhost:6379/0")
            print("‚úÖ Redis –ø–æ–¥–∫–ª—é—á–µ–Ω")
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ redis: {e}')
            self.storage = None

        # Dispatche
        self.dp = Dispatcher(storage=self.storage)

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
        self.dp.include_router(admin_router)
        self.dp.include_router(user_router)


    async def run(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
        print("ü§ñ Bot started")

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –∏ —Å–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É
        await db.connect()
        await db.create_admins_table()
        await db.create_table()


        try:
            await self.dp.start_polling(self.bot)
        finally:
            await db.close()


if __name__ == '__main__':
    bot = TelegramBot()
    asyncio.run(bot.run())
